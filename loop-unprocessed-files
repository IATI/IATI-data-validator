#!/bin/sh

PREFIX="Loop unprocessed files"
API=${API:-http://localhost:3000}

# loop forever
while :
do
  # request a file to be processed

  DATASET=`curl --header 'Accept: application/json' "$API/internal/file/next"`

  echo $DATASET
  
  ID=`echo $DATASET | xmllint --xpath '//_id/text()' -` 2> "/dev/null"
  
  if [ -z $ID ]; then
    echo "$PREFIX: Nothing found to process, waiting"
    sleep 1m
  
  else
    echo "$PREFIX: Got $ID -- start processing"
    
    cd /home

    PREFIX="Inhouse files"
    VERSION=`grep 'variable name="schemaVersion"' lib/iati-rulesets/rules/iati.xslt | cut -f 2 -d \> | cut -f 1 -d \<`

    # Try to get the file via our API

    mkdir -p /work/space/input

    HTTP_STATUS=$(curl -s "$API/iati-files/$BUCKET_SRC/download/$ID.xml" -o "/work/space/input/$ID.xml" -w "%{http_code}")
    echo "$PREFIX: retrieved $ID.xml with status $HTTP_STATUS"

    # If available:
    if [[ $HTTP_STATUS == 200 ]]; then 
      # Make sure we process the file again by removing the target for ant
      
      # Run the XML check and the rules
      ant -f build-engine.xml -Dfilemask=$ID feedback
      # Make the JSON conversion     
      ant -f build-engine.xml -Dfilemask=$ID json
      
      # Store the result
      echo "$PREFIX: store json for $ID"
      curl -sS -F "file=@/work/space/json/$ID.json;type=application/json" "$API/iati-files/$BUCKET_JSON/upload"

      rm -f /work/space/dest/$ID.feedback.xml
      rm -f /work/space/json/$ID.json
    else
      echo "ballsed it"
    fi
  fi
  
done